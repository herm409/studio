// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow to suggest 3rd party tools to encourage prospects.
 *
 * - suggestTools - A function that suggests 3rd party tools.
 * - SuggestToolsInput - The input type for the suggestTools function.
 * - SuggestToolsOutput - The return type for the suggestTools function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestToolsInputSchema = z.object({
  prospectName: z.string().describe('The name of the prospect.'),
  funnelStage: z.string().describe('The current stage of the funnel the prospect is in.'),
  prospectInfo: z.string().describe('Information about the prospect, including their interests and needs.'),
  previousInteractions: z.string().describe('A summary of previous interactions with the prospect.'),
});
export type SuggestToolsInput = z.infer<typeof SuggestToolsInputSchema>;

const SuggestToolsOutputSchema = z.object({
  toolSuggestions: z.array(
    z.object({
      toolName: z.string().describe('The name of the tool.'),
      toolType: z.enum(['informational video', 'in-person presentation', '3-way call with expert']).describe('The type of tool.'),
      reasoning: z.string().describe('Why this tool is suggested for this prospect at this stage.'),
      details: z.string().optional().describe('Details about the specific tool, like a video link or expert name.'),
    })
  ).describe('A list of suggested tools to encourage the prospect to move to the next stage in the funnel.'),
});
export type SuggestToolsOutput = z.infer<typeof SuggestToolsOutputSchema>;

export async function suggestTools(input: SuggestToolsInput): Promise<SuggestToolsOutput> {
  return suggestToolsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestToolsPrompt',
  input: {schema: SuggestToolsInputSchema},
  output: {schema: SuggestToolsOutputSchema},
  prompt: `You are an AI assistant designed to suggest 3rd party tools to encourage prospects to move to the next stage in a sales funnel.

  Based on the prospect's name, current funnel stage, prospect information, and previous interactions, suggest tools that will help them move forward.
  The tool type can be informational video, in-person presentation, or 3-way call with an expert.

  Prospect Name: {{{prospectName}}}
  Funnel Stage: {{{funnelStage}}}
  Prospect Information: {{{prospectInfo}}}
  Previous Interactions: {{{previousInteractions}}}

  Suggest 3 tools with the above information. Add why this tool is suggested for this prospect at this stage, and some optional details.
  Make sure the output is valid JSON.
  `,
});

const suggestToolsFlow = ai.defineFlow(
  {
    name: 'suggestToolsFlow',
    inputSchema: SuggestToolsInputSchema,
    outputSchema: SuggestToolsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
