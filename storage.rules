rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Profile Pictures: users/{userId}/profilePicture.jpg (standardized name)
    // Allow authenticated users to read and write their own profile picture.
    // Max size 5MB, only images.
    match /profilePictures/{userId}/{fileName} {
      allow read: if true; // Public read for profile pictures
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Prospect Avatars: prospectAvatars/{userId}/{prospectId}/{fileName}
    // Allow authenticated users to read and write avatars for their own prospects.
    // Max size 5MB, only images.
    match /prospectAvatars/{userId}/{prospectId}/{fileName} {
      allow read: if true; // Public read for prospect avatars
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Temporary prospect avatars (used during new prospect creation before ID is known)
    // prospectAvatars/{userId}/temp/{fileName}
    match /prospectAvatars/{userId}/temp/{fileName} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId
                     && request.resource.size < 5 * 1024 * 1024
                     && request.resource.contentType.matches('image/.*');
        allow delete: if request.auth != null && request.auth.uid == userId; // Allow delete for temp files
    }
  }
}
